o
shiny::runApp('Barcoding')
getwd
getwd()
setwd(barcoding)
setwd("Barcoding/")
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
runApp()
runApp
runApp()
deployApp()
runApp()
deployApp(appName = "Barcoding")
hr()
#### Packages ####
## app.R ##
library(shinydashboard)
#install.packages("baRcodeR")
library(baRcodeR)
pacman::p_load(writexl)
#### Functions ####
source(file = "custom_create_PDF_sub.R")
shiny::runApp('Barcoding')
setwd("Barcoding/")
library(rsconnect)
deployApp()
deployApp(appName = "Barcoding")
runApp()
runApp()
deployApp(appName = "Barcoding")
runApp()
deployApp(appName = "Barcoding")
setwd("Barcoding/")
shiny::runApp()
runApp()
runApp()
#### Packages ####
## app.R ##
library(shinydashboard)
#install.packages("baRcodeR")
library(baRcodeR)
pacman::p_load(writexl)
#### Functions ####
source(file = "custom_create_PDF_sub.R")
setwd("Barcoding/")
#### Functions ####
source(file = "custom_create_PDF_sub.R")
source(file = "custom_create_PDF_sub2.R")
shiny::runApp()
runApp()
proj= "Adult"
patient = "1"
visit_nr = "V1"
visit_type = "scheduled"
date = "2023-01-01"
labels_pat1 <- generate_labels_per_visit_herma2(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y"))
labels_pat1 <- generate_labels_per_visit_herma2(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y")
)
p <- stringr::str_pad(patient, width = 3,pad = "0", side = "left")
p
p <-paste0(substring(proj,1,1),p)
p
#v <- as.character(visit_nr) # levels 10, 11, 12, 20, 30, 40, 41, 42
static <- paste0("FOOD@\n",p,".",ifelse(visit_type=="scheduled","V","U"),visit_nr,".")
static
visit_nr <- 1
#v <- as.character(visit_nr) # levels 10, 11, 12, 20, 30, 40, 41, 42
static <- paste0("FOOD@\n",p,".",ifelse(visit_type=="scheduled","V","U"),visit_nr,".")
static
#### V1 ####
if(visit_type == "scheduled"){
if(visit_nr==1&(proj=="Adult"|proj=="Oesterreich")){
samples <- c(rep("25",6),
rep("26",6),
rep("27",6))
} else  if(visit_nr==1&proj=="Child"){
samples <- c(rep("13",2))
} else if(visit_nr==1&proj=="Infant"){
samples <- c(rep("02",5),
rep("03",3),
rep("04",2),
rep("05",2),
rep("06",2),
rep("07",2),
rep("08",3),
rep("09",3),
rep("10",2),
rep("11",2),
rep("12",2),
rep("20",5),
rep("21",2),
rep("22",1))
########V 2 / 3 ######
} else if(visit_nr%in%c(2,3)&(proj=="Adult"|proj=="Oesterreich")){
samples <- c(rep("bla",1))
} else if(visit_nr%in%c(2,3)&proj=="Child"){
samples <- c(rep("04",1),
rep("06",2),
rep("08",3))
} else if(visit_nr%in%c(2,3,4)&proj=="Infant"){
samples <- c(rep("04",2),
rep("06",2),
rep("08",3),
rep("09",3),
rep("10",2),
rep("11",2),
rep("12",2),
rep("22",1))
##### V4 ####
} else if(visit_nr==4&(proj=="Adult"|proj=="Oesterreich")){
samples <- c(rep("25",6),
rep("26",6),
rep("27",6))
} else if(visit_nr==4&proj=="Child"){
samples <- c(rep("13",2)
)
} else if(visit_nr==5&proj=="Infant"){
samples <- c(rep("01",2),
rep("02",5),
rep("03",3),
rep("04",2),
rep("06",2),
rep("08",3),
rep("09",3),
rep("10",2),
rep("11",2),
rep("12",2),
rep("20",5),
rep("22",1))
##### V5 #####
} else if(visit_nr==6&proj=="Infant"){
samples <- c(rep("02",5),
rep("03",5))
}
} else {
##### Unscheduled ######
if((proj=="Adult"|proj=="Oesterreich")){
samples <- c(rep("03",5),
rep("14", 5))
} else  if(proj=="Child"){
samples <- c(rep("02",3),
rep("03",4),
rep("04",1),
rep("05",1),
rep("06",1),
rep("07",1),
rep("08",3),
rep("10",1),
rep("11",1),
rep("12",1),
rep("21",1))
} else if(proj=="Infant"){
samples <- c(rep("02",5),
rep("03",3),
rep("04",2),
rep("05",2),
rep("06",2),
rep("07",2),
rep("08",3),
rep("10",2),
rep("11",2),
rep("12",2),
rep("21",2),
rep("22",1))
}
}
generate_labels_per_visit_herma2(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y"))
input <- NULL
input$project <- "Adult"
input$patient_n <- 1
input$v_n <- 1
input$visit_type <- "scheduled"
input$visit_date <- "2022-01-01"
generate_labels_per_visit_herma2(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y"))
labels_pat1 <- generate_labels_per_visit_herma2(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y"))
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
labels_pat1
labels_pat1[,]
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
baRcodeR
version(baRcodeR)
devtools::install_github("ropensci/baRcodeR", build_vignettes = T)
requier(baRcodeR)
require(baRcodeR)
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
traceback()
source("~/Documents/KFO/Barcodes/Barcoding/custom_qrcode_make.R", echo=TRUE)
custom_qrcode_make <- function (Labels, ErrCorr)
{
Xtxt <- gsub("_", "-", Labels)
if (nchar(Xtxt) <= 1) {
Xtxt <- paste0("\\s\\s", Xtxt)
warning("Label is single character or blank. Padding with empty spaces.")
}
if(grepl(Xtxt,pattern = "- - -")){
cat("we got into the right place")
Xpng <- grid::rasterGrob(matrix(c(1,1),
nrow =21,ncol=21), interpolate = FALSE)
} else{
cat("We are in the wrong place")
Xpng <- grid::rasterGrob(abs(qrcode::qr_code(paste0(Xtxt),
ecl = ErrCorr
# dataOutput = TRUE,
# plotQRcode = FALSE,
# mask = 3
) - 1),
interpolate = FALSE)
}
return(Xpng)
}
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32) # This sets the position of the sublabel under qr code
traceback
traceback()
source("~/Documents/KFO/Barcodes/Barcoding/custom_create_PDF_sub.R", echo=TRUE)
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32)
ErrCorr
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32)
nput$startLineHERMA
input$startLineHERMA
input$startLineHERMA <-1
custom_create_PDF_sub(user=FALSE,
Labels = labels_pat1[,],
name = 'LabelsOut',
type = 'matrix',
ErrCorr = 'M',
Fsz = 4,
Across = T,
ERows = input$startLineHERMA-1,
ECols = 0,
trunc = F,
numrow = 27,
numcol = 7,
page_width = 8.27,
page_height = 11.625,
width_margin = 0.33,
height_margin = 0.5314,
label_width = 1,
label_height = 0.385,
x_space = 0,
y_space = 0.5,
npc_y = 0.32)
runApp()
shiny::runApp('Barcoding')
shiny::runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
shiny::runApp('Barcoding')
input$project <- "Healthy Children"
input$patient_n <- 1
input$v_n <- 1
inpt$visit_type <-"scheduled"
input$visit_type <-"scheduled"
generate_labels_per_visit_herma(
proj = input$project,
patient = input$patient_n,
visit_nr = input$v_n,
visit_type = input$visit_type,
date = format(input$visit_date,format="%d.%m.%y"))
paste0("FOOD@\n",p,".",ifelse(visit_type=="scheduled","V","U"),visit_nr,".")
visit_type
visit_nr
proj
proj <- "Healthy Children"
proj
visit_type == "scheduled"
visit_nr==1
visit_nr==1&(proj=="Adult"|proj=="Oesterreich")
visit_nr%in%c(2,3)&proj=="Child"
generate_labels_per_visit_herma <- function(proj,
patient,
visit_nr,
visit_type,
date){
p <- stringr::str_pad(patient, width = 3,pad = "0", side = "left")
p <-paste0(substring(proj,1,1),p)
#v <- as.character(visit_nr) # levels 10, 11, 12, 20, 30, 40, 41, 42
static <- paste0("FOOD@\n",p,".",ifelse(visit_type=="scheduled","V","U"),visit_nr,".")
#### V1 ####
if(visit_type == "scheduled"){
if(visit_nr==1&(proj=="Adult"|proj=="Oesterreich")){
samples <- c(rep("03",9),
rep("14", 5))
} else  if(visit_nr==1&proj=="Child"){
samples <- c(rep("02",4),
rep("03",4),
rep("04",1),
rep("05",1),
rep("06",1),
rep("07",1),
rep("08",5),
rep("10",1),
rep("11",1),
rep("12",1),
rep("21",1))
} else if(visit_nr==1&proj=="Infant"){
samples <- c(rep("02",5),
rep("03",3),
rep("04",2),
rep("05",2),
rep("06",2),
rep("07",2),
rep("08",3),
rep("09",3),
rep("10",2),
rep("11",2),
rep("12",2),
rep("20",5),
rep("21",2),
rep("22",1))
########V 2 / 3 ######
}
runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
runApp('Barcoding')
